<?xml version="1.0" encoding="utf-8"?>
<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

  Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

  This program is free software; you can redistribute it and/or modify it under the
  terms of the GNU Lesser General Public License as published by the Free Software
  Foundation; either version 2.1 of the License, or (at your option) any later
  version.

  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License along
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

  Author: Felipe Cecagno <felipe@mconf.org>

  $Id: $
-->
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:maps="org.bigbluebutton.modules.layout.maps.*" implements="org.bigbluebutton.common.IBigBlueButtonModule">
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;

			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.common.events.ToolbarButtonEvent;
			import org.bigbluebutton.modules.layout.views.ToolbarComboBox;
			
			private var _moduleName:String = "Layout Module";			
			private var _globalDispatcher:Dispatcher = new Dispatcher();
			
			private function onCreationComplete():void {
				LogUtil.debug("LayoutModule initialized");	
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
			
			public function start(attributes:Object):void {	
				LogUtil.debug("Layout attr: " + attributes.layoutConfig);
				eventMap.startModule(attributes);
				addToolbarButton();
			}
			
			public function addToolbarButton():void{
				var event:ToolbarButtonEvent = new ToolbarButtonEvent(ToolbarButtonEvent.ADD);
				event.button = new ToolbarComboBox();
				_globalDispatcher.dispatchEvent(event);
			}
			
			public function stop():void {
				eventMap.stopModule();
			}
			
		]]>
	</mx:Script>
	
	<maps:LayoutEventMap id="eventMap"/>
</mx:Module>