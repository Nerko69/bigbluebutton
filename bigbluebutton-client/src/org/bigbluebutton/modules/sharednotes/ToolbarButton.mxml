<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml" 
		icon="{notesIcon}" 
		click="openNotesWindow()" 
		creationComplete="init()" 
		toolTip="{ResourceUtil.getInstance().getString('bbb.toolbar.sharednotes.toolTip')}" 
		xmlns:mate="http://mate.asfusion.com/"
		implements="org.bigbluebutton.common.IBbbToolbarComponent">
	
	<mate:Listener type="{SharedNotesWindow.SHARED_NOTES_CLOSED}" method="closeEventHandler" />
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import org.bigbluebutton.common.IBbbModuleWindow;
			import org.bigbluebutton.common.Images;
			import org.bigbluebutton.common.events.OpenWindowEvent;
			import org.bigbluebutton.common.events.CloseWindowEvent;
			import org.bigbluebutton.main.views.MainToolbar;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			[Embed(source="images/note_edit.png")]
			public var notes:Class;
			
			private var _attributes:Object;
			
			[Bindable] public var notesIcon:Class = notes;
			
			private var dispatcher:Dispatcher;
			private var window:SharedNotesWindow;
			
			private function init():void{
				dispatcher = new Dispatcher();
				window = new SharedNotesWindow();
				window.room = _attributes.room;
				window.connection = _attributes.connection;
				window.uri = _attributes.uri;
				window.host = _attributes.host;

				this.addEventListener(SharedNotesWindow.SHARED_NOTES_CLOSED, closeEventHandler);
				
				if (_attributes.autoStart.toString().toUpperCase() == "TRUE")
					openNotesWindow();
			}
			
			private function openNotesWindow():void{
				if (!this.selected) {
					var openEvent:OpenWindowEvent = new OpenWindowEvent(OpenWindowEvent.OPEN_WINDOW_EVENT);
					openEvent.window = window;
					dispatcher.dispatchEvent(openEvent);
					this.selected = true;
				} else {
					var closeEvent:CloseWindowEvent = new CloseWindowEvent();
					closeEvent.window = window;
					dispatcher.dispatchEvent(closeEvent);
					this.selected = false;
				}
			}
			
			private function closeEventHandler(e:Event):void {
				this.selected = false;
			}
			
			public function getAlignment():String{
				return MainToolbar.ALIGN_LEFT;
            }

			public function set attributes(attributes:Object):void {
				_attributes = attributes;
			}
		]]>
	</mx:Script>
</mx:Button>
